{"version":3,"sources":["app.js","controllers.js","directives.js","filters.js","services.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["'use strict';\n\n/* App Module */\nvar lubidari = angular.module('lubidariApp', [\n        'ngRoute',\n        'ngAnimate',\n        'ProdService',\n        'Controllers',\n        'Directive',\n        'ui.bootstrap',\n        'angularFileUpload'\n    ],\n    function ($interpolateProvider) {\n        $interpolateProvider.startSymbol('<{').endSymbol('}>');\n    });\nlubidari.value('item', []);\n\n\nlubidari.config(['$routeProvider',\n    function ($routeProvider) {\n        $routeProvider.\n            when('/', {\n                templateUrl: '/js/template/home.html',\n                controller: 'HomeCtrl'\n            }).\n            when('/to-order', {\n                templateUrl: '/js/template/order.html',\n                controller: 'OrderCtrl'\n            }).\n            when('/cart', {\n                templateUrl: '/js/template/cart.html',\n                controller: 'CartCtrl'\n            }).\n            when('/:id', {\n                templateUrl: '/js/template/show.html',\n                controller: 'ShowCtrl'\n            }).\n            otherwise({\n                redirectTo: '/'\n            });\n    }]);","'use strict';\n\n/* Controllers */\n\nvar controllers = angular.module('Controllers', []);\ncontrollers.controller('HomeCtrl', ['$scope', 'Service', '$window',\n    function ($scope, Service, $window) {\n        $scope.loading = true;\n        var data = JSON.parse($window.localStorage.getItem(\"data\"));\n        if (data == null || data == undefined) {\n            $scope.data = Service.query({}, function () {\n                $scope.loading = false;\n                $window.localStorage.setItem(\"data\", JSON.stringify($scope.data));\n            }, function () {\n                $scope.alerts = [\n                    {type: 'danger', msg: 'Кечиресиз, жуктоо ийгиликсиз аяктады. Дагы аракет кылып корунуз'}\n                ];\n                $scope.loading = false;\n            });\n        } else {\n            $scope.loading = false;\n            $scope.data = data;\n        }\n    }]);\n\ncontrollers.controller('ShowCtrl', ['$scope', 'ServiceId', '$routeParams', '$window',\n    function ($scope, ServiceId, $routeParams, $window) {\n        $scope.loading = true;\n        var data = JSON.parse($window.localStorage.getItem(\"data#\" + $routeParams.id));\n        if (data == null || data == undefined) {\n            $scope.prod = ServiceId.show({id: $routeParams.id}, function () {\n                $scope.loading = false;\n                $window.localStorage.setItem(\"data#\" + $routeParams.id, JSON.stringify($scope.prod));\n            }, function () {\n                $scope.loading = false;\n                $scope.alerts = [\n                    {type: 'danger', msg: 'Кечиресиз, жуктоо ийгиликсиз аяктады. Дагы аракет кылып корунуз'}\n                ];\n            });\n        } else {\n            $scope.loading = false;\n            $scope.prod = data;\n        }\n    }\n]);\n\ncontrollers.controller('OrderCtrl',['$scope', function($scope){\n    return $scope;\n}]);\n\ncontrollers.controller('CartCtrl',['$scope', function($scope){\n    return $scope;\n}]);\n\n\ncontrollers.controller('UploadController', ['$scope', 'FileUploader', function($scope, FileUploader) {\n    var CSRF_TOKEN = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n    var uploader = $scope.uploader = new FileUploader({\n        url: '/administrator/photo',\n        headers : {\n            'X-CSRF-TOKEN' : CSRF_TOKEN\n        },\n        photo: ''\n    });\n// FILTERS\n\n    uploader.filters.push({\n        name: 'customFilter',\n        fn: function(item /*{File|FileLikeObject}*/, options) {\n            return this.queue.length < 10;\n        }\n    });\n\n    // CALLBACKS\n\n    uploader.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n        console.info('onWhenAddingFileFailed', item, filter, options);\n    };\n    uploader.onAfterAddingFile = function(fileItem) {\n        console.info('onAfterAddingFile', fileItem);\n    };\n    uploader.onAfterAddingAll = function(addedFileItems) {\n        console.info('onAfterAddingAll', addedFileItems);\n    };\n    uploader.onBeforeUploadItem = function(item) {\n        console.info('onBeforeUploadItem', item);\n    };\n    uploader.onProgressItem = function(fileItem, progress) {\n        console.info('onProgressItem', fileItem, progress);\n    };\n    uploader.onProgressAll = function(progress) {\n        console.info('onProgressAll', progress);\n    };\n    uploader.onSuccessItem = function(fileItem, response, status, headers) {\n        uploader.photo = uploader.photo + response+',';\n        console.info('onSuccessItem', fileItem, response, status, headers);\n    };\n    uploader.onErrorItem = function(fileItem, response, status, headers) {\n        console.info('onErrorItem', fileItem, response, status, headers);\n    };\n    uploader.onCancelItem = function(fileItem, response, status, headers) {\n        console.info('onCancelItem', fileItem, response, status, headers);\n    };\n    uploader.onCompleteItem = function(fileItem, response, status, headers) {\n        console.info('onCompleteItem', fileItem, response, status, headers);\n    };\n    uploader.onCompleteAll = function() {\n        console.info('onCompleteAll');\n    };\n\n    console.info('uploader', uploader);\n}]);","var direct = angular.module('Directive', []);\r\n\r\ndirect.directive('product', ['$window',\r\n    function ($window) {\r\n        function link($scope, e) {\r\n            e.children(\".btn-link\").on(\"click\", function () {\r\n                $window.item =  JSON.stringify($scope.one);\r\n                console.log($window.item);\r\n            });\r\n        }\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: true,\r\n            templateUrl: '/js/template/product.html',\r\n            link: function ($scope, e) {\r\n                link($scope, e);\r\n            }\r\n        }\r\n    }]);","'use strict';\n\n/* Filters */\n\nangular.module('Filters', []);\n","'use strict';\n/* Services */\n\nvar services = angular.module('ProdService', ['ngResource']);\nservices.factory('Service',\n        function($resource) {\n            return $resource('/product/list',\n                    {query: {method: 'GET', isArray: false}});\n        });\nservices.factory('ServiceId',\n        function($resource) {\n            return $resource('/product/show/:id', {}, {\n                show: {method: 'GET', params: {id: '@id'}}\n            });\n        });\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["app.js","controllers.js","directives.js","filters.js","ngcart.js","services.js"],"names":[],"mappingsvtdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["'use strict';\n\n/* App Module */\nvar lubidari = angular.module('lubidariApp', [\n        'ngRoute',\n        'ngAnimate',\n        'ngCart',\n        'angular-loading-bar',\n        'ProdService',\n        'Controllers',\n        'Directive',\n        'ui.bootstrap',\n        'angularFileUpload'\n    ],\n    function ($interpolateProvider) {\n        $interpolateProvider.startSymbol('<{').endSymbol('}>');\n    });\nlubidari.config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {\n    cfpLoadingBarProvider.includeSpinner = false;\n}]);\n\nlubidari.factory('DataCache', function ($cacheFactory) {\n    return $cacheFactory('dataCache', {});\n});\n\nlubidari.config(['$routeProvider',\n    function ($routeProvider) {\n        $routeProvider.\n            when('/home', {\n                templateUrl: '/js/template/home.html',\n                controller: 'HomeCtrl'\n            }).\n            when('/to-order', {\n                templateUrl: '/js/template/order.html',\n                controller: 'OrderCtrl'\n            }).\n            when('/cart', {\n                templateUrl: '/js/template/cart.html',\n                controller: 'CartCtrl'\n            }).\n            when('/:id', {\n                templateUrl: '/js/template/show.html',\n                controller: 'ShowCtrl'\n            }).\n            otherwise({\n                redirectTo: '/home'\n            });\n    }]);","'use strict';\n\n/* Controllers */\n\nvar controllers = angular.module('Controllers', []);\ncontrollers.controller('HomeCtrl', ['$scope', 'Service', '$window','cfpLoadingBar',\n    function ($scope, Service, $window, cfpLoadingBar) {\n        $scope.loading = true;\n        cfpLoadingBar.start();\n        $scope.currentPage = 1;\n        $scope.totalItems = 0;\n        $scope.loadingItems = function (currentPage) {\n            var data = JSON.parse($window.localStorage.getItem(\"data#page\"+currentPage));\n            if (data == null || data == undefined) {\n                $scope.data = Service.query({page: currentPage}, function () {\n                    $scope.loading = false;\n                    cfpLoadingBar.complete();\n                    $window.localStorage.setItem(\"data#page\"+currentPage, JSON.stringify($scope.data));\n                }, function () {\n                    $scope.alerts = [\n                        {type: 'danger', msg: 'Кечиресиз, жуктоо ийгиликсиз аяктады. Дагы аракет кылып корунуз'}\n                    ];\n                    $scope.loading = false;\n                });\n            } else {\n                $scope.loading = false;\n                $scope.data = data;\n                $scope.totalItems = $scope.data.total;\n            }\n        }\n        $scope.changePage = function (num) {\n            $scope.currentPage = num;\n            $scope.loadingItems(num);\n        }\n        $scope.loadingItems(1);\n    }]);\n\ncontrollers.controller('ShowCtrl', ['$scope', 'ServiceId', '$routeParams', 'DataCache',\n    function ($scope, ServiceId, $routeParams, DataCache) {\n        $scope.loading = true;\n      /*  var data = JSON.parse($window.localStorage.getItem(\"data#\" + $routeParams.id));\n      /*  if (data == null || data == undefined) {\n            $scope.prod = ServiceId.show({id: $routeParams.id}, function () {\n                $scope.loading = false;\n                $window.localStorage.setItem(\"data#\" + $routeParams.id, JSON.stringify($scope.prod));\n            }, function () {\n                $scope.loading = false;\n                $scope.alerts = [\n                    {type: 'danger', msg: 'Кечиресиз, жуктоо ийгиликсиз аяктады. Дагы аракет кылып корунуз'}\n                ];\n            });\n        } else {\n            $scope.loading = false;\n            $scope.prod = data;\n        }*/\n        $scope.prod = DataCache.get('prod');\n\n        if (!$scope.prod) {\n            $scope.prod = ServiceId.show({id: $routeParams.id}, function () {\n                $scope.loading = false;\n                DataCache.put('prod', $scope.prod);\n               // $window.localStorage.setItem(\"data#\" + $routeParams.id, JSON.stringify($scope.prod));\n            }, function () {\n                $scope.loading = false;\n                $scope.alerts = [\n                    {type: 'danger', msg: 'Кечиресиз, жуктоо ийгиликсиз аяктады. Дагы аракет кылып корунуз'}\n                ];\n            });\n        }\n\n        console.log(DataCache.info());\n    }\n]);\n\ncontrollers.controller('OrderCtrl', ['$scope', function ($scope) {\n    $scope.CSRF_TOKEN = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n    return $scope;\n}]);\n\ncontrollers.controller('CartCtrl', ['$scope', function ($scope) {\n    return $scope;\n}]);\n\ncontrollers.controller('TimepickerCtrl', function ($scope) {\n    $scope.mytime = new Date();\n    $scope.hstep = 1;\n    $scope.mstep = 15;\n});\n\ncontrollers.controller('DatepickerCtrl', function ($scope) {\n    $scope.today = function () {\n        $scope.dt = new Date();\n    };\n    $scope.today();\n\n    $scope.clear = function () {\n        $scope.dt = null;\n    };\n\n    // Disable weekend selection\n    $scope.disabled = function (date, mode) {\n        return ( mode === 'day' && ( date.getDay() === 0 || date.getDay() === 7 ) );\n    };\n\n    $scope.toggleMin = function () {\n        $scope.minDate = $scope.minDate ? null : new Date();\n    };\n    $scope.toggleMin();\n\n    $scope.open = function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        $scope.opened = true;\n    };\n\n    $scope.dateOptions = {\n        formatYear: 'yy',\n        startingDay: 1\n    };\n\n    $scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\n    $scope.format = $scope.formats[0];\n});\n\n\ncontrollers.controller('UploadController', ['$scope', 'FileUploader', function ($scope, FileUploader) {\n    var CSRF_TOKEN = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n    var uploader = $scope.uploader = new FileUploader({\n        url: '/administrator/photo',\n        headers: {\n            'X-CSRF-TOKEN': CSRF_TOKEN\n        },\n        photo: ''\n    });\n// FILTERS\n\n    uploader.filters.push({\n        name: 'customFilter',\n        fn: function (item /*{File|FileLikeObject}*/, options) {\n            return this.queue.length < 10;\n        }\n    });\n\n    // CALLBACKS\n\n    uploader.onWhenAddingFileFailed = function (item /*{File|FileLikeObject}*/, filter, options) {\n        console.info('onWhenAddingFileFailed', item, filter, options);\n    };\n    uploader.onAfterAddingFile = function (fileItem) {\n        console.info('onAfterAddingFile', fileItem);\n    };\n    uploader.onAfterAddingAll = function (addedFileItems) {\n        console.info('onAfterAddingAll', addedFileItems);\n    };\n    uploader.onBeforeUploadItem = function (item) {\n        console.info('onBeforeUploadItem', item);\n    };\n    uploader.onProgressItem = function (fileItem, progress) {\n        console.info('onProgressItem', fileItem, progress);\n    };\n    uploader.onProgressAll = function (progress) {\n        console.info('onProgressAll', progress);\n    };\n    uploader.onSuccessItem = function (fileItem, response, status, headers) {\n        uploader.photo = uploader.photo + response + ',';\n        console.info('onSuccessItem', fileItem, response, status, headers);\n    };\n    uploader.onErrorItem = function (fileItem, response, status, headers) {\n        console.info('onErrorItem', fileItem, response, status, headers);\n    };\n    uploader.onCancelItem = function (fileItem, response, status, headers) {\n        console.info('onCancelItem', fileItem, response, status, headers);\n    };\n    uploader.onCompleteItem = function (fileItem, response, status, headers) {\n        console.info('onCompleteItem', fileItem, response, status, headers);\n    };\n    uploader.onCompleteAll = function () {\n        console.info('onCompleteAll');\n    };\n\n    console.info('uploader', uploader);\n}]);","var direct = angular.module('Directive', []);\r\n\r\ndirect.directive('product', ['$window',\r\n    function ($window) {\r\n        function link($scope, e) {\r\n            e.children(\".btn-link\").on(\"click\", function () {\r\n                $window.item = JSON.stringify($scope.one);\r\n               // console.log($window.item);\r\n            });\r\n        }\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: true,\r\n            templateUrl: '/js/template/product.html',\r\n            link: function ($scope, e) {\r\n                link($scope, e);\r\n            }\r\n        }\r\n    }]);\r\n\r\ndirect.directive('buttonToCart', ['$window',\r\n    function ($window) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                id: '@',\r\n                name: '@',\r\n                quantity: '@',\r\n                price: '@'\r\n            },\r\n            template: '<button class=\"btn btn-link\" >' +\r\n            '<span class=\"glyphicon glyphicon-shopping-cart\"> Заказать</span>' +\r\n            '</button>',\r\n            link: function (scope, el, attr) {\r\n\r\n                el.on('click', function(){\r\n                    var data = {'id': attr.id,'quantity': attr.quantity };\r\n                    $window.localStorage.setItem(\"cart\",JSON.parse(data));\r\n                });\r\n\r\n                scope.inCart = function () {\r\n                   // alert(\"4541415\");\r\n                   // return ngCart.getItemById(attrs.id);\r\n                };\r\n\r\n                if (scope.inCart()) {\r\n                   // scope.q = ngCart.getItemById(attrs.id).getQuantity();\r\n                } else {\r\n                   // scope.q = parseInt(scope.quantity);\r\n                }\r\n\r\n                scope.qtyOpt = [];\r\n                for (var i = 1; i <= scope.quantityMax; i++) {\r\n                   // scope.qtyOpt.push(i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n]);","'use strict';\n\n/* Filters */\n\nangular.module('Filters', []);\n","'use strict';\r\n\r\n\r\nangular.module('ngCart', ['ngCart.directives'])\r\n\r\n    .config([function () {\r\n\r\n    }])\r\n\r\n    .provider('$ngCart', function () {\r\n        this.$get = function () {\r\n        };\r\n    })\r\n\r\n    .run(['$rootScope', 'ngCart','ngCartItem', 'store', function ($rootScope, ngCart, ngCartItem, store) {\r\n\r\n        $rootScope.$on('ngCart:change', function(){\r\n            ngCart.$save();\r\n        });\r\n\r\n        if (angular.isObject(store.get('cart'))) {\r\n            ngCart.$restore(store.get('cart'));\r\n\r\n        } else {\r\n            ngCart.init();\r\n        }\r\n\r\n    }])\r\n\r\n    .service('ngCart', ['$rootScope', 'ngCartItem', 'store', function ($rootScope, ngCartItem, store) {\r\n\r\n        this.init = function(){\r\n            this.$cart = {\r\n                shipping : null,\r\n                taxRate : null,\r\n                tax : null,\r\n                items : []\r\n            };\r\n        };\r\n\r\n        this.addItem = function (id, name, price, quantity, data) {\r\n\r\n            var inCart = this.getItemById(id);\r\n\r\n            if (typeof inCart === 'object'){\r\n                //Update quantity of an item if it's already in the cart\r\n                inCart.setQuantity(quantity, false);\r\n            } else {\r\n                var newItem = new ngCartItem(id, name, price, quantity, data);\r\n                this.$cart.items.push(newItem);\r\n                $rootScope.$broadcast('ngCart:itemAdded', newItem);\r\n            }\r\n\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n        };\r\n\r\n        this.getItemById = function (itemId) {\r\n            var items = this.getCart().items;\r\n            var build = false;\r\n\r\n            angular.forEach(items, function (item) {\r\n                if  (item.getId() === itemId) {\r\n                    build = item;\r\n                }\r\n            });\r\n            return build;\r\n        };\r\n\r\n        this.setShipping = function(shipping){\r\n            this.$cart.shipping = shipping;\r\n            return this.getShipping();\r\n        };\r\n\r\n        this.getShipping = function(){\r\n            if (this.getCart().items.length == 0) return 0;\r\n            return  this.getCart().shipping;\r\n        };\r\n\r\n        this.setTaxRate = function(taxRate){\r\n            this.$cart.taxRate = +parseFloat(taxRate).toFixed(2);\r\n            return this.getTaxRate();\r\n        };\r\n\r\n        this.getTaxRate = function(){\r\n            return this.$cart.taxRate\r\n        };\r\n\r\n        this.getTax = function(){\r\n            return +parseFloat(((this.getSubTotal()/100) * this.getCart().taxRate )).toFixed(2);\r\n        };\r\n\r\n        this.setCart = function (cart) {\r\n            this.$cart = cart;\r\n            return this.getCart();\r\n        };\r\n\r\n        this.getCart = function(){\r\n            return this.$cart;\r\n        };\r\n\r\n        this.getItems = function(){\r\n            return this.getCart().items;\r\n        };\r\n\r\n        this.getTotalItems = function () {\r\n            var count = 0;\r\n            var items = this.getItems();\r\n            angular.forEach(items, function (item) {\r\n                count += item.getQuantity();\r\n            });\r\n            return count;\r\n        };\r\n\r\n        this.getTotalUniqueItems = function () {\r\n            return this.getCart().items.length;\r\n        };\r\n\r\n        this.getSubTotal = function(){\r\n            var total = 0;\r\n            angular.forEach(this.getCart().items, function (item) {\r\n                total += item.getTotal();\r\n            });\r\n            return +parseFloat(total).toFixed(2);\r\n        };\r\n\r\n        this.totalCost = function () {\r\n            return +parseFloat(this.getSubTotal() + this.getShipping() + this.getTax()).toFixed(2);\r\n        };\r\n\r\n        this.removeItem = function (index) {\r\n            this.$cart.items.splice(index, 1);\r\n            $rootScope.$broadcast('ngCart:itemRemoved', {});\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n\r\n        };\r\n\r\n        this.removeItemById = function (id) {\r\n            var cart = this.getCart();\r\n            angular.forEach(cart.items, function (item, index) {\r\n                if  (item.getId() === id) {\r\n                    cart.items.splice(index, 1);\r\n                }\r\n            });\r\n            this.setCart(cart);\r\n            $rootScope.$broadcast('ngCart:itemRemoved', {});\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n        };\r\n\r\n        this.empty = function () {\r\n\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n            this.$cart.items = [];\r\n            localStorage.removeItem('cart');\r\n        };\r\n\r\n        this.toObject = function() {\r\n\r\n            if (this.getItems().length === 0) return false;\r\n\r\n            var items = [];\r\n            angular.forEach(this.getItems(), function(item){\r\n                items.push (item.toObject());\r\n            });\r\n\r\n            return {\r\n                shipping: this.getShipping(),\r\n                tax: this.getTax(),\r\n                taxRate: this.getTaxRate(),\r\n                subTotal: this.getSubTotal(),\r\n                totalCost: this.totalCost(),\r\n                items:items\r\n            }\r\n        };\r\n\r\n\r\n        this.$restore = function(storedCart){\r\n            var _self = this;\r\n            _self.init();\r\n            _self.$cart.shipping = storedCart.shipping;\r\n            _self.$cart.tax = storedCart.tax;\r\n\r\n            angular.forEach(storedCart.items, function (item) {\r\n                _self.$cart.items.push(new ngCartItem(item._id,  item._name, item._price, item._quantity, item._data));\r\n            });\r\n            this.$save();\r\n        };\r\n\r\n        this.$save = function () {\r\n            return store.set('cart', JSON.stringify(this.getCart()));\r\n        }\r\n\r\n    }])\r\n\r\n    .factory('ngCartItem', ['$rootScope', '$log', function ($rootScope, $log) {\r\n\r\n        var item = function (id, name, price, quantity, data) {\r\n            this.setId(id);\r\n            this.setName(name);\r\n            this.setPrice(price);\r\n            this.setQuantity(quantity);\r\n            this.setData(data);\r\n        };\r\n\r\n\r\n        item.prototype.setId = function(id){\r\n            if (id)  this._id = id;\r\n            else {\r\n                $log.error('An ID must be provided');\r\n            }\r\n        };\r\n\r\n        item.prototype.getId = function(){\r\n            return this._id;\r\n        };\r\n\r\n\r\n        item.prototype.setName = function(name){\r\n            if (name)  this._name = name;\r\n            else {\r\n                $log.error('A name must be provided');\r\n            }\r\n        };\r\n        item.prototype.getName = function(){\r\n            return this._name;\r\n        };\r\n\r\n        item.prototype.setPrice = function(price){\r\n            var priceFloat = parseFloat(price);\r\n            if (priceFloat) {\r\n                if (priceFloat <= 0) {\r\n                    $log.error('A price must be over 0');\r\n                } else {\r\n                    this._price = (priceFloat);\r\n                }\r\n            } else {\r\n                $log.error('A price must be provided');\r\n            }\r\n        };\r\n        item.prototype.getPrice = function(){\r\n            return this._price;\r\n        };\r\n\r\n\r\n        item.prototype.setQuantity = function(quantity, relative){\r\n\r\n\r\n            var quantityInt = parseInt(quantity);\r\n            if (quantityInt % 1 === 0){\r\n                if (relative === true){\r\n                    this._quantity  += quantityInt;\r\n                } else {\r\n                    this._quantity = quantityInt;\r\n                }\r\n                if (this._quantity < 1) this._quantity = 1;\r\n\r\n            } else {\r\n                this._quantity = 1;\r\n                $log.info('Quantity must be an integer and was defaulted to 1');\r\n            }\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n\r\n        };\r\n\r\n        item.prototype.getQuantity = function(){\r\n            return this._quantity;\r\n        };\r\n\r\n        item.prototype.setData = function(data){\r\n            if (data) this._data = data;\r\n        };\r\n\r\n        item.prototype.getData = function(){\r\n            if (this._data) return this._data;\r\n            else $log.info('This item has no data');\r\n        };\r\n\r\n\r\n        item.prototype.getTotal = function(){\r\n            return +parseFloat(this.getQuantity() * this.getPrice()).toFixed(2);\r\n        };\r\n\r\n        item.prototype.toObject = function() {\r\n            return {\r\n                id: this.getId(),\r\n                name: this.getName(),\r\n                price: this.getPrice(),\r\n                quantity: this.getQuantity(),\r\n                data: this.getData(),\r\n                total: this.getTotal()\r\n            }\r\n        };\r\n\r\n        return item;\r\n\r\n    }])\r\n\r\n    .service('store', ['$window', function ($window) {\r\n\r\n        return {\r\n\r\n            get: function (key) {\r\n                if ($window.localStorage [key]) {\r\n                    var cart = angular.fromJson($window.localStorage [key]);\r\n                    return JSON.parse(cart);\r\n                }\r\n                return false;\r\n\r\n            },\r\n\r\n\r\n            set: function (key, val) {\r\n\r\n                if (val === undefined) {\r\n                    $window.localStorage .removeItem(key);\r\n                } else {\r\n                    $window.localStorage [key] = angular.toJson(val);\r\n                }\r\n                return $window.localStorage [key];\r\n            }\r\n        }\r\n    }])\r\n\r\n    .controller('CartController',['$scope', 'ngCart', function($scope, ngCart) {\r\n        $scope.ngCart = ngCart;\r\n\r\n    }])\r\n\r\n    .value('version', '0.0.3-rc.1');\r\n;'use strict';\r\n\r\n\r\nangular.module('ngCart.directives', ['ngCart.fulfilment'])\r\n\r\n    .controller('CartController',['$scope', 'ngCart', function($scope, ngCart) {\r\n        $scope.ngCart = ngCart;\r\n    }])\r\n\r\n    .directive('ngcartAddtocart', ['ngCart', function(ngCart){\r\n        return {\r\n            restrict : 'E',\r\n            controller : 'CartController',\r\n            scope: {\r\n                id:'@',\r\n                name:'@',\r\n                quantity:'@',\r\n                quantityMax:'@',\r\n                price:'@',\r\n                data:'='\r\n            },\r\n            transclude: true,\r\n            templateUrl: '/js/template/addtocart.html',\r\n            link:function(scope, element, attrs){\r\n                scope.attrs = attrs;\r\n                scope.inCart = function(){\r\n                    return  ngCart.getItemById(attrs.id);\r\n                };\r\n\r\n                if (scope.inCart()){\r\n                    scope.q = ngCart.getItemById(attrs.id).getQuantity();\r\n                } else {\r\n                    scope.q = parseInt(scope.quantity);\r\n                }\r\n\r\n                scope.qtyOpt =  [];\r\n                for (var i = 1; i <= scope.quantityMax; i++) {\r\n                    scope.qtyOpt.push(i);\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n    }])\r\n\r\n    .directive('ngcartCart', [function(){\r\n        return {\r\n            restrict : 'E',\r\n            controller : 'CartController',\r\n            scope: {},\r\n            templateUrl: '/js/template/cart.html',\r\n            link:function(scope, element, attrs){\r\n\r\n            }\r\n        };\r\n    }])\r\n\r\n    .directive('ngcartSummary', [function(){\r\n        return {\r\n            restrict : 'E',\r\n            controller : 'CartController',\r\n            scope: {},\r\n            transclude: true,\r\n            templateUrl: '/js/template/summary.html'\r\n        };\r\n    }])\r\n\r\n    .directive('ngcartCheckout', [function(){\r\n        return {\r\n            restrict : 'E',\r\n            controller : ('CartController', ['$scope', 'ngCart', 'fulfilmentProvider', function($scope, ngCart, fulfilmentProvider) {\r\n                $scope.ngCart = ngCart;\r\n\r\n                $scope.checkout = function () {\r\n                    fulfilmentProvider.setService($scope.service);\r\n                    fulfilmentProvider.setSettings($scope.settings);\r\n                    var promise = fulfilmentProvider.checkout();\r\n                    console.log(promise);\r\n                }\r\n            }]),\r\n            scope: {\r\n                service:'@',\r\n                settings:'='\r\n            },\r\n            transclude: true,\r\n            templateUrl: 'template/ngCart/checkout.html'\r\n        };\r\n    }]);;\r\nangular.module('ngCart.fulfilment', [])\r\n    .service('fulfilmentProvider', ['$injector', function($injector){\r\n\r\n        this._obj = {\r\n            service : undefined,\r\n            settings : undefined\r\n        };\r\n\r\n        this.setService = function(service){\r\n            this._obj.service = service;\r\n        };\r\n\r\n        this.setSettings = function(settings){\r\n            this._obj.settings = settings;\r\n        };\r\n\r\n        this.checkout = function(){\r\n            var provider = $injector.get('ngCart.fulfilment.' + this._obj.service);\r\n            return provider.checkout(this._obj.settings);\r\n\r\n        }\r\n\r\n    }])\r\n\r\n\r\n    .service('ngCart.fulfilment.log', ['$q', '$log', 'ngCart', function($q, $log, ngCart){\r\n\r\n        this.checkout = function(){\r\n\r\n            var deferred = $q.defer();\r\n\r\n            $log.info(ngCart.toObject());\r\n            deferred.resolve({\r\n                cart:ngCart.toObject()\r\n            });\r\n\r\n            return deferred.promise;\r\n\r\n        }\r\n\r\n    }])\r\n\r\n    .service('ngCart.fulfilment.http', ['$http', 'ngCart', function($http, ngCart){\r\n\r\n        this.checkout = function(settings){\r\n            return $http.post(settings.url,\r\n                {data:ngCart.toObject()})\r\n        }\r\n    }])\r\n\r\n\r\n    .service('ngCart.fulfilment.paypal', ['$http', 'ngCart', function($http, ngCart){\r\n\r\n\r\n    }]);","'use strict';\n/* Services */\n\nvar services = angular.module('ProdService', ['ngResource']);\nservices.factory('Service',\n        function($resource) {\n            return $resource('/product/list?page=:page',{},\n                    {query: {method: 'GET', params: {page: '@page'}}});\n        });\nservices.factory('ServiceId',\n        function($resource) {\n            return $resource('/product/show/:id', {}, {\n                show: {method: 'GET', params: {id: '@id'}}\n            });\n        });\n"],"sourceRoot":"/source/"}